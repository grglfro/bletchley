<p>Cryptography is hard.  Most software developers realize this.  Security dogma of "don't invent your own crypto; use standard algorithms" has been a "best practice" for some time.  But what does this mean?  Use AES?  As cryptographers know, and history has shown, this alone is insufficient.  Using otherwise safe cryptographic primitives in custom protocols and message formats requires an understanding of cryptography that most programmers lack.  As a result, many implementations are sorely insecure due to the way cryptographic primitives are combined and applied in real world contexts.
</p>
<p>
As a software penetration tester, your job is to identify security flaws in custom software.  However, when black-box testing an application that misuses cryptographic primitives, how do you identify and exploit these issues efficiently?  The task is fraught with engineering difficulties which frustrate the process and cause you to expend valuable testing time on trivial matters that are specific to the implementation.  Bletchley was created to assist with the detection, analysis, and exploitation of cryptographic flaws and aims to help automate the tedious aspects of this analysis while leaving the security expert in control of the process.
</p>
<p>
Bletchley is currently in the early stages of development and consists of tools which provide:
<ul>
<li>Automated token encoding detection (47 encoding variants)</li>
<li>Passive ciphertext block length and repetition analysis</li>
<li>Script generator for efficient automation of HTTP requests</li>
<li>A flexible, multithreaded padding oracle attack library with CBC-R support</li>
<li>Automated chosen ciphertext probes, particularly useful against stream ciphers (experimental)</li>
</ul>
</p>
<p>
As the framework matures, the following additional features are currently anticipated:
<ul>
<li>Passive binary structure detection</li>
<li>Tools to analyze and exploit other flaws, such as asymmetric algorithm and hash misuse</li>
<li>Integration with timing attack tools</li>
</ul>
</p>
<p>
For more information on the specific tools, see the <a href="https://code.blindspotsecurity.com/trac/bletchley/wiki/Overview">documentation</a>.  Bletchley was created by penetration testers at <a href="http://vsecurity.com/">VSR</a> and is now maintained by <a href="https://blindspotsecurity.com/">Blindspot Security</a>.
</p>
<p>
At the moment, the best way to use Bletchley is to <a href="https://code.blindspotsecurity.com/dav/bletchley">check out the source code</a> and build it from the <code>trunk</code> directory.  For more information, see the <a href="https://code.blindspotsecurity.com/trac/bletchley/browser/trunk/INSTALL">installation instructions</a>.  Note that contributions (patches, testing, <a href="https://code.blindspotsecurity.com/trac/bletchley/newticket">bug reports</a>) are greatly appreciated.
</p>
